name: Build TuneUp Releases

on:
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build with PyInstaller
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          python -m pyinstaller --name="TuneUp" --onefile --windowed --icon="assets/icon.ico" gui_gestore_musicale.py
        elif [ "$RUNNER_OS" == "macOS" ]; then
          python -m pyinstaller --name="TuneUp" --onefile --windowed --icon="assets/icon.icns" gui_gestore_musicale.py
        else
          python -m pyinstaller --name="TuneUp" --onefile gui_gestore_musicale.py
        fi
      shell: bash

    - name: Prepare Artifacts for Upload
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          mv dist/TuneUp.exe dist/TuneUp-Windows-x64.exe
        elif [ "$RUNNER_OS" == "macOS" ]; then
          zip -r dist/TuneUp-macOS.zip dist/TuneUp.app
        else
          mv dist/TuneUp dist/TuneUp-Linux-x64
        fi
      shell: bash

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/TuneUp-Windows-x64.exe
          dist/TuneUp-macOS.zip
          dist/TuneUp-Linux-x64
